name: Monorepo Multi-Service CI

on:
  push:
    branches: [main, master]
    paths:
      - 'services/order-service-nodejs/**'
      - 'services/product-service-nodejs/**'
      - 'services/user-service-python/**'
      - 'frontend-react/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main, master]
    paths:
      - 'services/order-service-nodejs/**'
      - 'services/product-service-nodejs/**'
      - 'services/user-service-python/**'
      - 'frontend-react/**'
      - '.github/workflows/**'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        include:
          - folder: order-service-nodejs
            type: node
          - folder: product-service-nodejs
            type: node
          - folder: user-service-python
            type: python
          - folder: frontend-react
            type: node

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        if: ${{ matrix.type == 'node' }}
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up Python
        if: ${{ matrix.type == 'python' }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install Dependencies (Node.js)
        if: ${{ matrix.type == 'node' }}
        run: npm install
        # FIXED working-directory resolving service folders under 'services/' except frontend-react
        working-directory: ${{ matrix.folder == 'frontend-react' && 'frontend-react' || format('services/{0}', matrix.folder) }}

      - name: Install Dependencies (Python)
        if: ${{ matrix.type == 'python' }}
        run: pip install --no-cache-dir -r requirements.txt
        working-directory: services/user-service-python

      - name: Run Tests (Node.js & React)
        if: ${{ matrix.type == 'node' }}
        run: npm test
        # SAME working-directory fix as install step
        working-directory: ${{ matrix.folder == 'frontend-react' && 'frontend-react' || format('services/{0}', matrix.folder) }}

      - name: Run Tests (Python)
        if: ${{ matrix.type == 'python' }}
        run: pytest
        working-directory: services/user-service-python

      - name: Build Docker image
        run: docker build -t ${{ matrix.folder }}:latest .
        # SAME working-directory fix for docker build
        working-directory: ${{ matrix.folder == 'frontend-react' && 'frontend-react' || format('services/{0}', matrix.folder) }}

