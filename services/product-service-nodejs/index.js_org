const express = require('express');
const app = express();
const port = 3001;

app.use(express.json());

// In-memory product store
const products = {};

// Root endpoint
app.get('/', (req, res) => {
  res.json({ message: 'Product Service is running' });
});

// Get all products
app.get('/products', (req, res) => {
  res.json(Object.values(products));
});

// Get product by ID
app.get('/products/:id', (req, res) => {
  const product = products[req.params.id];
  if (!product) {
    res.status(404).json({ error: 'Product not found' });
    return;
  }
  res.json(product);
});

// Create a new product
app.post('/products', (req, res) => {
  const { id, name, price } = req.body;
  if (products[id]) {
    res.status(400).json({ error: 'Product ID already exists' });
    return;
  }
  products[id] = { id, name, price };
  res.json(products[id]);
});

// Update a product
app.put('/products/:id', (req, res) => {
  const { id, name, price } = req.body;
  if (req.params.id !== id.toString()) {
    res.status(400).json({ error: 'Product ID mismatch' });
    return;
  }
  if (!products[id]) {
    res.status(404).json({ error: 'Product not found' });
    return;
  }
  products[id] = { id, name, price };
  res.json(products[id]);
});

// Delete a product
app.delete('/products/:id', (req, res) => {
  if (!products[req.params.id]) {
    res.status(404).json({ error: 'Product not found' });
    return;
  }
  delete products[req.params.id];
  res.json({ message: 'Product deleted' });
});

// Start server
app.listen(port, () => {
  console.log(`Product service running on port ${port}`);
});

